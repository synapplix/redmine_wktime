<%
@wday_index = 1
@trOpen = false
@row = 0
@total_hours = 0.0
thours = nums = Array[0.0, 0.0, 0.0, 0.0,0.0, 0.0, 0.0]
prev_entry = nil
entry = nil
currencySym = ""
%>

<p> </p>
<% if @editable %>
	<%= link_to l(:button_add_row), "javascript:addRow();projectChanged(document.getElementsByName('time_entry[][project_id]'),0);", :class => 'icon icon-time-add', :style=>'color:#454545' %>
<% end %>


<table id="issueTable" class="list time-entries">
<thead>
<tr>
	<%= render :partial => 'issue_header'%>
</tr>
</thead>
<tbody>

<% unless entries.blank?
	col_values = []
	matrix_values = []
	weeklyHash = getWeeklyView(entries, controller.getUnitLabel, false)
	weeklyHash.each do |key, matrix|
		matrix.each do |rows|
			issueWritten = false
			rows.each.with_index do |entry, i|
%>


				<% if !entry.blank? %>
					<% if !issueWritten %>
						<% # this is a new Row %>
						<% # close the previously opened row first %>
						<%= render :partial => 'edit_hours', :locals => {:entry => nil, :isTemplate => false,
							:padAt => 'end', :padTill => 8}%>

						<%= render :partial => 'edit_issues2', :locals => {:entry => entry, :isTemplate => false}%>
						<% issueWritten = true %>
					<% end %>
					<% # fill the days till the current day
					%>
					<%= render :partial => 'edit_hours', :locals => {:entry => nil, :isTemplate => false, :padAt => 'begin', :padTill => i+1}%>

					<%= render :partial => 'edit_hours', :locals => {:entry => entry, :isTemplate => false, :padAt => 'begin', :padTill => i+2}%>

					<% thours[i] += entry.hours unless @prev_template && !entries.nil?%>
					<% @total_hours += entry.hours unless @prev_template && !entries.nil?%>
					<% currencySym = controller.getUnit(entry) %>
				<% end %>
			<% end %>
			<% # write only the firt row for previous week template
			  break if @prev_template %>
		<% end %>
	<% end %>

<% else %>
	<% # if there are no entries, put an empty row%>
	<% currencySym = controller.getUnit(nil) %>
	<%= render :partial => 'edit_issues2', :locals => {:entry => nil, :isTemplate => false}%>
<% end %>

	<% # pad any incomplete days
	%>
	<%= render :partial => 'edit_hours', :locals => {:entry => nil, :isTemplate => false,
		:padAt => 'end', :padTill => 8}%>


	<!-- row for putting the total working hours -->
	<tr>
		<!-- Padding (because there is no need of values in the first columns)-->
		<td class="project"></td>
		<td class="issue"></td>
		<td class="comments"></td>
		<td ></td>
		<td ></td>
		<td ></td>

		<!-- Working hours label -->
		<td> <b> <%= l(:label_workingHours) %> </b> </td>

		<!-- Working hours entries with the values of each column -->
		<% thours.each_with_index do |th,i| %>
			<td align="center"><span id=<%="day_total_#{i+1}" %>><%=("%.2f" % th)%></span></td>
		<% end %>

		<!-- Workinghours label + total sum -->
		<td> <b> <%= l(:label_totalh)%> <%=currencySym%>&nbsp;<span id="total_hours"><%=("%.2f" % @total_hours)%></span> </b> </td>
	</tr>


<% if controller.showWorktimeHeader %>

	<!-- row for putting the remaining hours -->
	<tr>
		<!-- Padding (because there is no need of values in the first columns)-->
		<td class="project"></td>
		<td class="issue"></td>
		<td class="comments"></td>
		<td ></td>
		<td ></td>
		<td ></td>

		<!-- Remaining hours label-->
		<td><b>	<%= l(:label_remaining_hours) %> <span id="remaining hours"> </span> </b></td>

		<!-- Remaining hours entries with the values of each column-->
		<% thours.each_with_index do |th,i| %>

		<% entry = StartEnd.where(user_id: params[:user_id], startday: params[:startday]).first %>    <!-- Find the right entry -->
	 	<% if (!entry.nil?) %>

	 		 <%
 	 		 	arrayStart = 	[entry.start_1,entry.start_2,entry.start_3,entry.start_4,entry.start_5,entry.start_6,entry.start_7]
 		 		arrayEnd   = 	[entry.end_1,  entry.end_2,  entry.end_3,  entry.end_4,  entry.end_5,  entry.end_6,  entry.end_7]
 		 		arrayPause = 	[entry.pause_1,  entry.pause_2,  entry.pause_3,  entry.pause_4,  entry.pause_5,  entry.pause_6,  entry.pause_7]

 				r_start = arrayStart[i]
 				r_end 	= arrayEnd[i]
 				r_pause	= arrayPause[i]
 			%>

				<!--Calculating the time (= end-start-pause)-->
	 			<% if (!r_start.nil? && !r_end.nil? && !r_pause.nil?)   %>
	                <% r_start = r_start.strftime('%s').to_f    		%>
	                <% r_end   = r_end .strftime('%s').to_f    			%>
	                <% r_pause = (r_pause.strftime('%H').to_i)*3600 + (r_pause.strftime('%M').to_i)*60    %>
	                <% time    = (r_end-r_start-r_pause).to_f    		%>
	                <% time    = '%.2f' % (time / 3600)        			%>
                <% else time= '0.00'%>
                <% end %>
                <td align="center">	<span id= <%= "remaining_#{i+1}" %>> <%= time %>  </span></td>

		<% else %>
			<td align="center"> <span id= <%= "remaining_#{i+1}" %>> <%= '0.00'%> </span></td>
		<% end %>

	<% end %>
	</tr>

<% end %>

<!--Initalizing colors for logged time  -->
<script type="text/javascript">
	for(i = 4; i <= 10; i++) {
		updateRemainingHr(i);
	}
</script>

</tbody>
</table>

<center>
<% if @wktime.nil? || @wktime.status == 'n' || @wktime.status == 'r'%>
		<%= submit_tag l(:button_save), :id => 'wktime_save', :name => 'wktime_save', :disabled => !(@row > 0)%>
	<% if !Setting.plugin_redmine_wktime[:wktime_use_approval_system].blank? &&
			Setting.plugin_redmine_wktime[:wktime_use_approval_system].to_i == 1 %>
			<%= submit_tag l(:button_submit),:id => 'wktime_submit', :name => 'wktime_submit', :onclick => "return validateMinhour('#{controller.minHour}','#{getNonWorkingDayColumn(params[:startday])}');" , :disabled => !(@row > 0)%>
	<% end %>
<% end %>
<% if !Setting.plugin_redmine_wktime[:wktime_use_approval_system].blank? &&
	Setting.plugin_redmine_wktime[:wktime_use_approval_system].to_i == 1 %>
	<% if !@wktime.nil? && @wktime.status == 's' %>
		<%= submit_tag l(:button_wk_unsubmit), :name => 'wktime_unsubmit', :disabled => !(@row > 0)%>
			<% if controller.check_approvable_status() %>
			<%= submit_tag l(:button_wk_approve), :name => 'wktime_approve', :disabled => !(@row > 0)%>
			<%=h hidden_field_tag('wktime_notes', "") %>
			<% # the jquery dialog box doesn't port the reject button value%>
			<%=h hidden_field_tag('hidden_wk_reject', "") %>
			<%= submit_tag l(:button_wk_reject), :name => 'wktime_reject', :disabled => !(@row > 0),
				:onclick => "return showNotes();" %>
		<% end %>
	<% elsif  !@wktime.nil? && @wktime.status == 'a' %>
	<% if controller.check_approvable_status()  %>
			<%= submit_tag l(:button_wk_unapprove), :id => 'wktime_unapprove', :name => 'wktime_unapprove'%>
		<% end %>
	<% end %>
<% end %>
</center>

<%= context_menu %>
